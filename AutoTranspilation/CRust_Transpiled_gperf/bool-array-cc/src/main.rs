 /*************************************************************************
 * This file was generated by CRUST by an automated semantics preserving
 * translation from C/C++ to Rust
 * CRUST isn't perfect and may require manual editing
 * Check warnings and errors and refer to the official Rust Documentation
 ************************************************************************/
 /* Fast lookup table abstraction implemented as an Iteration Number Array
   Copyright (C) 1989-1998, 2002 Free Software Foundation, Inc.
   Written by Douglas C. Schmidt <schmidt@ics.uci.edu>
   and Bruno Haible <bruno@clisp.org>.

   
 
 
 /* Specification. */
 
 
/** Crust doesn't resolve C/C++ dependencies or included header.
* You may have to define your own module and implement those functionality in Rust 
* Or you can translate header file with Crust to produce Rust code. * 
* >>>>>>>> # include "bool-array.h" 
 
 # include < stdio . h >
 **/
 * >>>>>>>> # include < string . h >
 **/
 * >>>>>>>> # include "options.h" 
 
 /* Frees this object.  */ 
 Bool_Array :: ~ Bool_Array ( ) 
 { 
 /* Print out debugging diagnostics. */ 
 if ( option [ DEBUG ] ) 
 fprintf ( stderr , "\ndumping boolean array information\n" 
 "size = %d\niteration number = %d\nend of array dump\n" , 
 _size , _iteration_number ) ; 
 delete [ ] const_cast < unsigned int * >
 **/
 ( _storage_array ) ; 
 
 * >>>>>>>> # ifndef __OPTIMIZE__ 
 
 # define INLINE /* not inline */ 
 # include "bool-array.icc" 
 # undef INLINE 
 
 # endif /* not defined __OPTIMIZE__ */ 
