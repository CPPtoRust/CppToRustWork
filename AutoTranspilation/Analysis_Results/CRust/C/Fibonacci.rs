/*************************************************************************
 * This file was generated by CRUST by an automated semantics preserving
 * translation from C/C++ to Rust
 * CRUST isn't perfect and may require manual editing
 * Check warnings and errors and refer to the official Rust Documentation
 ************************************************************************/
// Fibonacci Series using Recursion

/** Crust doesn't resolve C/C++ dependencies or included header.
* You may have to define your own module and implement those functionality in Rust
* Or you can translate header file with Crust to produce Rust code. *
* >>>>>>>> # include < stdio . h >
 **/
fn fib(n: i32) -> i32 {
    if (n <= 1) == true {
        /** Crust tries to identify return statement and replace with rust equivalent
         * shorthand notation. If error found in this line, Please replace shorthand notation
         * with return statement
         **/
        n
    }
    /** Crust tries to identify return statement and replace with rust equivalent
     * shorthand notation. If error found in this line, Please replace shorthand notation
     * with return statement
     **/
    return fib(n - 1) + fib(n - 2);
}
fn main() {
    /*Avoid using mutable variables unless it is necessary to do so
     */
    let mut n: i32 = 9;
    printf("%d", fib(n));
    getchar();
    /** Crust tries to identify return statement and replace with rust equivalent
     * shorthand notation. If error found in this line, Please replace shorthand notation
     * with return statement
     **/
    return 0;
}
